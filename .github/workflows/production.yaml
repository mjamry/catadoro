name: production
on:
  pull_request:
    branches: master
    types: [closed]

run-name: Update Prod using ${{ github.head_ref }}

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      is_merged: ${{ steps.is_merged.outputs.result }}

    steps:
      - name: Check if merged
        id: is_merged
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Summary
        run: |
          echo "IsMerged: ${{ steps.is_merged.outputs.result }}"

  update:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.is_merged == 'true' }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          repository: ${{ github.event.pull_request.base.repo.full_name }}

      - name: Major version update
        working-directory: ${{ github.workspace }}
        id: version_update
        run: |
          npm install commander > /dev/null
          echo "VERSION_SUMMARY=$(node ./.github/updateVersion.js -f app.config.js -u major --field version)" >> "$GITHUB_OUTPUT"
        continue-on-error: false

      - name: Commit new version
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "Updated major version: ${{ steps.version_update.outputs.VERSION_SUMMARY }}"
          add: app.config.js
        continue-on-error: false

      - name: Get runtime version
        working-directory: ${{ github.workspace }}
        id: runtime_version
        run: echo "RUNTIME_VERSION=$(node ./.github/getVersion.js -f app.config.js --field runtimeVersion)" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            Channel production updated
            App Version: ${{ steps.version_update.outputs.VERSION_SUMMARY }}
            Runtime Version: ${{steps.runtime_version.outputs.RUNTIME_VERSION}}

      - name: Publish update
        run: eas update --channel production --message "${{ steps.version_update.outputs.VERSION_SUMMARY }}"
        continue-on-error: false

      - name: Summary
        run: |
          echo "Channel production updated
          App Version: ${{ steps.version_update.outputs.VERSION_SUMMARY }}
          Runtime Version: ${{steps.runtime_version.outputs.RUNTIME_VERSION}}
          " >> $GITHUB_STEP_SUMMARY

  closed_pull_request:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.is_merged == 'false' }}

    steps:
      - name: Summary
        run: echo "PR closed by user" >> $GITHUB_STEP_SUMMARY
